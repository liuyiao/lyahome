<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssm.mapper.RoleMapper">
  <resultMap id="BaseResultMap" type="com.ssm.pojo.Role">
    <id column="role_ukid" jdbcType="BIGINT" property="roleUkid" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="modify_user_id" jdbcType="BIGINT" property="modifyUserId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_ukid, role_name, status, create_time, create_user_id, modify_time, modify_user_id
  </sql>
  <select id="selectByExample" parameterType="com.ssm.pojo.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sy_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sy_role
    where role_ukid = #{roleUkid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sy_role
    where role_ukid = #{roleUkid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ssm.pojo.RoleExample">
    delete from sy_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ssm.pojo.Role">
    insert into sy_role (role_ukid, role_name, status, 
      create_time, create_user_id, modify_time, 
      modify_user_id)
    values (#{roleUkid,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=BIGINT}, #{modifyTime,jdbcType=TIMESTAMP}, 
      #{modifyUserId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.ssm.pojo.Role">
    insert into sy_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleUkid != null">
        role_ukid,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="modifyUserId != null">
        modify_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleUkid != null">
        #{roleUkid,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyUserId != null">
        #{modifyUserId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ssm.pojo.RoleExample" resultType="java.lang.Long">
    select count(*) from sy_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sy_role
    <set>
      <if test="record.roleUkid != null">
        role_ukid = #{record.roleUkid,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=BIGINT},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyUserId != null">
        modify_user_id = #{record.modifyUserId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sy_role
    set role_ukid = #{record.roleUkid,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user_id = #{record.createUserId,jdbcType=BIGINT},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      modify_user_id = #{record.modifyUserId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssm.pojo.Role">
    update sy_role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyUserId != null">
        modify_user_id = #{modifyUserId,jdbcType=BIGINT},
      </if>
    </set>
    where role_ukid = #{roleUkid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssm.pojo.Role">
    update sy_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      modify_user_id = #{modifyUserId,jdbcType=BIGINT}
    where role_ukid = #{roleUkid,jdbcType=BIGINT}
  </update>



  <!--selectAll查询所有角色信息-->
  <select id="selectAll" resultMap="BaseResultMap">
  select * from sy_role


</select>

  <select id="selectCountRole" resultType="long">
    select count(*) from sy_role

    <where>
      <if test="no!=null and no!=''">
        and (role_ukid like '%${no}%' or role_name  like  '%${no}%')
      </if>
      <if test="status!=null" >
        and (status =#{status})
      </if>
    </where>

  </select>

  <!--selectRoleList-->
  <select id="selectRoleList"  resultMap="BaseResultMap">
    select * from sy_role


    <where>
      <if test="no!=null and no!=''">
        and (role_ukid like '%${no}%' or role_name  like  '%${no}%')
      </if>
      <if test="status!=null" >
        and (status =#{status})
      </if>
    </where>
  </select>



  <!--添加
  -->
<insert id="roleAdd">
  insert into sy_role (role_name,create_time,status) values (#{role.roleName},#{role.createTime},#{role.status})
</insert>



  <select id="queryByid" resultMap="BaseResultMap">
  select * from sy_role where role_ukid=#{id}

</select>


  <!--修改-->
  <update id="editRole" >

    update sy_role set role_name=#{role.roleName} where role_ukid=#{role.roleUkid}
  </update>

  <delete id="deleteBatch">
    delete  from sy_role where role_ukid
    in
    <foreach collection="ids" open="(" close=")" item="id" separator=",">
      #{id}
    </foreach>


  </delete>

  <select id="showZtree" resultType="ztreevo">
  select

  p.per_id as id,p.name ,


   p.parentid as pId,

   true as 'open',

    IF(rp.sys_role_id=#{rid},true,false)   as 'checked'

    from sys_permission as p  LEFT JOIN

(SELECT * from sys_role_permission where sys_role_id=#{rid})

 as rp on rp.sys_permission_id=p.per_id
  </select>

<delete id="deletePermission">

  delete from sys_role_permission where sys_role_id=#{rid}
</delete>

  <insert id="addBatch">
    insert into sys_role_permission(sys_role_id,sys_permission_id)
    values 
      <foreach collection="ids" separator="," item="id">
        (#{rid},#{id})

      </foreach>

  </insert>




  <select id="selectAllRolesByAccount" resultMap="com.ssm.mapper.RoleMapper.BaseResultMap">
  select  r.* from sy_user as u INNER JOIN  sys_user_role as ur on u.user_id= ur.sys_user_id

      INNER JOIN sy_role as r on r.role_ukid=ur.sys_role_id

    where u.user_account = #{userAccount}


  </select>

  <select id="selectAllPermissionsByAccount" resultMap="com.ssm.mapper.PermissionMapper.BaseResultMap">
select  p.* from sy_user as u INNER JOIN  sys_user_role as ur on u.user_id= ur.sys_user_id

INNER JOIN sy_role as r on r.role_ukid=ur.sys_role_id

INNER JOIN sys_role_permission as rp on rp.sys_role_id=r.role_ukid

INNER JOIN sys_permission   as p on p.per_id=rp.sys_permission_id

where u.user_account = #{uname}  GROUP BY p.per_id

  </select>


</mapper>